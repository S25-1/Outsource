@model OutsourceGoogleMaps.Models.AdressViewModel

@{
    ViewBag.Title = "Maps";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<script src="https://code.jquery.com/jquery-3.3.1.min.js"></script>
<script>
    var lat = 51.450851;
    var long = 5.480200;
    var CompanyName = "Hello World!";
    var map;
    var marker;
    function myMap() {
        var mapProp = {
            center: new google.maps.LatLng(lat, long),
            zoom: 5,
        };
        map = new google.maps.Map(document.getElementById("googleMap"), mapProp);
        var marker = new google.maps.Marker({
            position: new google.maps.LatLng(lat, long)
        });
        marker.setMap(map);

        var infowindow = new google.maps.InfoWindow({
            content: CompanyName
        });

        google.maps.event.addListener(marker, 'click', function () {
            var pos = map.getZoom();
            map.setZoom(5);
            map.setCenter(marker.getPosition());
            window.setTimeout(function () { map.setZoom(pos); }, 3000);
            infowindow.open(map, marker);
        });
    }

    function markiePerkie() {
        /* API KEY FOR GOOGLE MAPS */
        var API_KEY = 'secret_string';

        var address = document.getElementById('inputValue').value;

        $.post(
            "https://maps.googleapis.com/maps/api/geocode/json?address=" +
            address +
            "&sensor=false&key="+ API_KEY,
            function(data) {
                //console.log(data.results[0].geometry.location);
                vals = data.results[0].geometry.location;
                var marker = new google.maps.Marker({
                    position: new google.maps.LatLng(vals.lat, vals.lng)
                });

                marker.setMap(map);
            }
        );
    }
</script>

<script async src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBlP8u8bXlEVooKQSz6P1fLvQMEFpoNPCc
&amp;callback=myMap"></script>

<h2>Maps</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="text" name="Address" value="Amsterdam" id="inputValue"/>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <div onclick="markiePerkie()" value="Search" class="btn btn-default" >Search</div>
            </div>
        </div>
    </div>
}



<div id="googleMap" style="width:100%;height:400px;"></div>


<div>
    @Html.ActionLink("Back to List", "Maps")
</div>
